{"id":"main.ts","dependencies":[{"name":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/lib/tsconfig.json","includedInParent":true,"mtime":1613730500902},{"name":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/package.json","includedInParent":true,"mtime":1613730623060},{"name":"./beautifier","loc":{"line":5,"column":27},"parent":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/lib/main.ts","resolved":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/lib/beautifier/index.ts"},{"name":"./settings","loc":{"line":16,"column":25},"parent":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/lib/main.ts","resolved":"/Users/danefitzmaurice/Projects/git-hub/bash-beautifier/lib/settings.ts"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deactivate = exports.activate = exports.config = void 0;\nvar atom_1 = require(\"atom\");\nvar beautifier_1 = require(\"./beautifier\");\nvar subscriptions = new atom_1.CompositeDisposable();\nfunction formatEditorText(editor) {\n    editor = editor || atom.workspace.getActiveTextEditor();\n    if (!editor)\n        return;\n    editor.setText(beautifier_1.format(editor.getText()));\n}\nfunction onNewEditor(editor) {\n    subscriptions.add(editor.getBuffer().onWillSave(function () { return formatEditorText(editor); }));\n}\nvar settings_1 = require(\"./settings\");\nObject.defineProperty(exports, \"config\", { enumerable: true, get: function () { return settings_1.settings; } });\nfunction activate() {\n    subscriptions.add(atom.commands.add('atom-workspace', 'shell-script-beautifier:format', function () {\n        return formatEditorText();\n    }), atom.workspace.observeTextEditors(onNewEditor));\n}\nexports.activate = activate;\nfunction deactivate() {\n    subscriptions.dispose();\n}\nexports.deactivate = deactivate;\n"},"sourceMaps":{"js":{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;;AAAA,6BAAuD;AAEvD,2CAAsC;AAEtC,IAAM,aAAa,GAAG,IAAI,0BAAmB,EAAE,CAAC;AAEhD,SAAS,gBAAgB,CAAC,MAAmB;IAC3C,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC;IAExD,IAAI,CAAC,MAAM;QAAE,OAAO;IAEpB,MAAM,CAAC,OAAO,CAAC,mBAAM,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,WAAW,CAAC,MAAkB;IACrC,aAAa,CAAC,GAAG,CACf,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,gBAAgB,CAAC,MAAM,CAAC,EAAxB,CAAwB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAED,uCAAgD;AAAvC,kGAAA,QAAQ,OAAU;AAE3B,SAAgB,QAAQ;IACtB,aAAa,CAAC,GAAG,CACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,EAAE,gCAAgC,EAAE;QACpE,OAAA,gBAAgB,EAAE;IAAlB,CAAkB,CACnB,EACD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAC/C,CAAC;AACJ,CAAC;AAPD,4BAOC;AAED,SAAgB,UAAU;IACxB,aAAa,CAAC,OAAO,EAAE,CAAC;AAC1B,CAAC;AAFD,gCAEC","sourcesContent":["import { CompositeDisposable, TextEditor } from 'atom';\n\nimport { format } from './beautifier';\n\nconst subscriptions = new CompositeDisposable();\n\nfunction formatEditorText(editor?: TextEditor) {\n  editor = editor || atom.workspace.getActiveTextEditor();\n\n  if (!editor) return;\n\n  editor.setText(format(editor.getText()));\n}\n\nfunction onNewEditor(editor: TextEditor) {\n  subscriptions.add(\n    editor.getBuffer().onWillSave(() => formatEditorText(editor))\n  );\n}\n\nexport { settings as config } from './settings';\n\nexport function activate() {\n  subscriptions.add(\n    atom.commands.add('atom-workspace', 'shell-script-beautifier:format', () =>\n      formatEditorText()\n    ),\n    atom.workspace.observeTextEditors(onNewEditor)\n  );\n}\n\nexport function deactivate() {\n  subscriptions.dispose();\n}\n"]}},"error":null,"hash":"cded514146f8c04306f564a0a2d97e35","cacheData":{"env":{}}}