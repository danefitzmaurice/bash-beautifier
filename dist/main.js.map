{"version":3,"sources":["beautifier/snippet.ts","beautifier/format-instance-worker.ts","beautifier/index.ts","settings.ts","main.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourceRoot":"../lib","sourcesContent":["/**\n *  ...\n */\nexport class Snippet {\n  get src() {\n    return this.source;\n  }\n\n  constructor(private source: string) {}\n\n  /**\n   *  ...\n   */\n  occurrences(pattern: RegExp) {\n    return this.source.match(pattern)?.length ?? 0;\n  }\n\n  /**\n   *  ...\n   */\n  contains(pattern: string | RegExp) {\n    return pattern instanceof RegExp\n      ? pattern.test(this.source)\n      : this.source.includes(pattern);\n  }\n\n  /**\n   *  ...\n   */\n  replace(searchValue: string | RegExp, replaceValue: string | Snippet) {\n    replaceValue =\n      typeof replaceValue === 'string' ? replaceValue : replaceValue.src;\n\n    return new Snippet(this.source.replace(searchValue, replaceValue));\n  }\n\n  /**\n   *  ...\n   */\n  sub(searchValue: string | RegExp, replaceValue: string | Snippet, count = 0) {\n    replaceValue =\n      typeof replaceValue === 'string' ? replaceValue : replaceValue.src;\n\n    return new Snippet(this.source.replace(searchValue, replaceValue));\n  }\n\n  strip() {\n    return new Snippet(this.source.trim());\n  }\n\n  /**\n   *  ...\n   */\n  clone() {\n    return new Snippet(this.source);\n  }\n}\n","import { EventEmitter } from 'events';\n\nimport { Snippet } from './snippet';\n\nconst HEREDOC_START_REGEX = /.*<<-?\\s*[\\'|\"]?([_|\\w]+)[\\'|\"]?.*/;\n\nconst FUNCTION_STYLE_REGEX = [\n  /\\bfunction\\s+(\\w*)\\s*\\(\\s*\\)\\s*/,\n  /\\bfunction\\s+(\\w*)\\s*/,\n  /\\b\\s*(\\w*)\\s*\\(\\s*\\)\\s*/\n];\n\nconst FUNCTION_STYLE_REPLACEMENT = [\n  /function \\g<1>() /,\n  /function \\g<1> /,\n  /\\g<1>() /\n];\n\n/**\n * Takes the given Bash source code line and simplifies it by removing stuff\n * that is not useful for the purpose of indentation level calculation.\n *\n * @param sourceLine ...\n * @returns ...\n */\nfunction getTestRecord(sourceLine: Snippet) {\n  return (\n    sourceLine\n      // collapse multiple quotes between ' ... '\n      .sub(/'.*?'/g, '')\n      // collapse multiple quotes between \" ... \"\n      .sub(/\".*?\"/g, '')\n      // collapse multiple quotes between ` ... `\n      .sub(/`.*?`/g, '')\n      // collapse multiple quotes between \\` ... ' (weird case)\n      .sub(/\\\\`.*?'`/g, '')\n      // strip out any escaped single characters\n      .sub(/\\\\./g, '')\n      // remove '#' comments\n      .sub(/(^|\\s)(#.*)/, '', 1)\n  );\n}\n\n/**\n * Returns the index for the function declaration style detected in the given\n * string or null if no function declarations are detected.\n *\n * @param testRecord ...\n * @returns ...\n */\nfunction detectFunctionStyle(testRecord: Snippet) {\n  // IMPORTANT: apply regex sequentially and stop on the first match:\n  return (\n    FUNCTION_STYLE_REGEX.findIndex((regex) => regex.test(testRecord.src)) ||\n    null\n  );\n}\n\nexport class FormatInstanceWorker extends EventEmitter {\n  readonly indentSize = atom.config.get('shell-script-beautifier.indentSize');\n  readonly indentType = atom.config.get('shell-script-beautifier.indentType');\n  readonly backup = atom.config.get('shell-script-beautifier.backup');\n  // readonly applyFunctionStyle = atom.config.get('shell-script-beautifier.applyFunctionStyle');\n  readonly applyFunctionStyle: number | null = null;\n\n  tab = 0;\n  caseLevel = 0;\n  continueLine = false;\n  openBrackets = 0;\n  inHereDoc = false;\n  deferExtQuote = false;\n  inExtQuote = false;\n  extQuoteString = '';\n  hereString = '';\n  line = 1;\n  formatter = true;\n  lines: string[] = [];\n\n  get output() {\n    return this.lines.join('\\n');\n  }\n\n  constructor() {\n    super();\n\n    this.on('line-end', this.onLineEnd);\n  }\n\n  static apply(data: string, path = '') {\n    const worker = new FormatInstanceWorker();\n\n    for (let line of data.split('\\n')) {\n      worker.processLine(line);\n    }\n\n    if (worker.tab !== 0) {\n      console.error(\n        `File ${path}: error: indent/outdent mismatch: ${worker.tab}.\\n`\n      );\n    }\n\n    return worker.output;\n  }\n\n  processLine(input: string) {\n    //\n    const line = input.replace(/ +?$/, '');\n    //\n    let stripped = new Snippet(line.trim());\n\n    // preserve blank lines\n    if (!stripped.src) {\n      this.write(stripped.src);\n\n      console.log('outat', 1);\n\n      return;\n    }\n\n    // ensure space before ;; terminators in case statements\n    if (this.caseLevel) {\n      // stripped = utils.sub(r'(\\S);;', r'\\1 ;;', stripped)\n      stripped = stripped.replace(/(\\S);;/g, '\\\\1 ;;');\n    }\n\n    let test = getTestRecord(stripped);\n\n    // pass on with no changes\n    if (this.inHereDoc) {\n      this.write(line);\n\n      // now test for here-doc termination string\n      if (test.contains(this.hereString) && !test.contains(/<</)) {\n        this.inHereDoc = false;\n      }\n\n      return this.emit('line-end', stripped, test);\n    }\n\n    // not in here doc\n    if (test.contains(/<<-?/) && !test.contains(/done.*<<</)) {\n      this.hereString = stripped.sub(HEREDOC_START_REGEX, '\\\\1', 1).src;\n\n      this.inHereDoc = this.hereString.length > 0;\n    }\n\n    if (!this.inExtQuote && test.contains(/(^|\\s)(\\'|\")/g)) {\n      // apply only after this line has been processed\n      this.deferExtQuote = true;\n      this.extQuoteString = test.sub(/.*([\\'\"]).*/g, '\\\\1', 1).src;\n\n      // provide this.line before quote\n      test = test.sub(new RegExp(`(.*)${this.extQuoteString}s.*`), '\\\\1', 1);\n    }\n\n    if (this.inExtQuote && test.contains(this.extQuoteString)) {\n      // provide this.line after quotes\n      test = test.sub(new RegExp(`.*${this.extQuoteString}s(.*)`), '\\\\1', 1);\n\n      this.inExtQuote = false;\n    }\n\n    if (this.inExtQuote || !this.formatter) {\n      // pass on unchanged\n      this.write(line);\n\n      if (stripped.contains(/#\\s*@this.formatter:on/g)) {\n        this.formatter = true;\n        return;\n      }\n\n      return this.emit('line-end', stripped, test);\n    }\n\n    // not in ext quote\n    if (stripped.contains(/#\\s*@this.formatter:off/g)) {\n      this.formatter = false;\n      this.write(line);\n\n      return;\n    }\n\n    // multi-this.line conditions are often meticulously formatted\n\n    if (this.openBrackets) {\n      this.write(line);\n\n      if (this.deferExtQuote) {\n        this.inExtQuote = true;\n        this.deferExtQuote = false;\n      }\n\n      return this.emit('line-end', stripped, test);\n    }\n\n    let inc = test.occurrences(/(\\s|^|;)(case|then|do)(;|$|\\s)/g);\n    inc += test.occurrences(/(\\{|\\(|\\[)/g);\n\n    let outc = test.occurrences(/(\\s|^|;)(esac|fi|done|elif)(;|\\)|\\||$|\\s)/g);\n    outc += test.occurrences(/(\\}|\\)|\\])/g);\n\n    if (test.contains(/\\besac\\b/g)) {\n      if (this.caseLevel == 0) {\n        throw new Error(\n          `File ${path}: error: \"esac\" before \"case\" in this.line ${this.line}.\\n`\n        );\n      }\n\n      outc += 1;\n      this.caseLevel -= 1;\n    }\n\n    // special handling for bad syntax within case ... esac\n    if (test.contains(/\\bcase\\b/g)) {\n      inc += 1;\n      this.caseLevel += 1;\n    }\n\n    let choiceCase = 0;\n\n    if (this.caseLevel && test.contains(/^[^(]*\\)/g)) {\n      inc += 1;\n      choiceCase = -1;\n    }\n\n    // detect functions\n    const funcDeclStyle = detectFunctionStyle(test);\n\n    if (funcDeclStyle !== null) {\n      stripped = this.changeFunctionStyle(stripped, funcDeclStyle);\n    }\n\n    // an ad-hoc solution for the \"else\" keyword\n    let elseCase = !test.contains(/^(else|elif)/) ? 0 : -1;\n\n    let net = inc - outc;\n\n    this.tab += Math.min(net, 0);\n\n    // while 'tab' is preserved across multiple lines, 'extab' is not and is\n    // used for some adjustments:\n    let extab = this.tab + elseCase + choiceCase;\n\n    if (this.continueLine && !this.openBrackets) {\n      extab++;\n    }\n\n    extab = Math.max(0, extab);\n\n    this.write(this.indentType.repeat(this.indentSize * extab) + stripped);\n\n    this.tab += Math.max(net, 0);\n\n    if (this.deferExtQuote) {\n      this.inExtQuote = true;\n      this.deferExtQuote = false;\n    }\n\n    this.emit('line-end', stripped, test);\n  }\n\n  /**\n   * Converts a function definition syntax from the 'func_decl_style' to the one\n   * that has been set in self.apply_function_style and returns the string with\n   * the converted syntax.\n   *\n   * @param strippedRecord ...\n   * @param funcDeclStyle ...\n   * @returns ...\n   */\n  private changeFunctionStyle(strippedRecord: Snippet, funcDeclStyle: number) {\n    if (funcDeclStyle === null) return strippedRecord;\n\n    if (this.applyFunctionStyle === null) {\n      // user does not want to enforce any specific function style\n      return strippedRecord;\n    }\n\n    const regex = FUNCTION_STYLE_REGEX[funcDeclStyle];\n    const replacement = FUNCTION_STYLE_REPLACEMENT[this.applyFunctionStyle];\n\n    return strippedRecord.sub(regex, replacement).strip();\n  }\n\n  private write(data: string) {\n    this.lines.push(data);\n  }\n\n  private onLineEnd = (strippedRecord: Snippet, testRecord: Snippet) => {\n    // count open brackets for this.line continuation\n    this.openBrackets += testRecord.occurrences(/\\[/g);\n    this.openBrackets -= testRecord.occurrences(/\\]/g);\n    this.continueLine = strippedRecord.contains(/\\\\$/g);\n\n    this.line++;\n  };\n}\n","import { FormatInstanceWorker } from './format-instance-worker';\n\n/**\n * ...\n *\n * @param data ...\n * @param path ...\n * @returns ...\n */\nexport function format(data: string, path = '') {\n  return FormatInstanceWorker.apply(data, path);\n}\n\n// function init() {\n//   let errors = [];\n//\n//   const parser = argparse.ArgumentParser({\n//     description: 'A Bash beautifier for the masses'\n//   });\n//\n//   // parser.addArgument()\n//\n//   //                                              \" masses\")\n//   // parser.add_argument('--indent-size', '-i', nargs=1, type=int, default=4,\n//   //                     help=\"Sets the number of spaces to be used in \"\n//   //                          \"indentation.\")\n//   // parser.add_argument('--files', '-f', nargs='*',\n//   //                     help=\"Files to be beautified.\")\n//   // parser.add_argument('--backup', '-b', action='store_true',\n//   //                     help=\"Beautysh will create a backup file in the \"\n//   //                          \"same path as the original.\")\n//   // parser.add_argument('--this.tab', '-t', action='store_true',\n//   //                     help=\"Sets indentation to tabs instead of spaces\")\n//   // args = parser.parse_args()\n//\n//   args = parser.parseArgs();\n//\n//   if (process.env.argv.length < 2) {\n//     // parser.print_help()\n//     return;\n//   }\n//\n//   if (Array.isArray(args.indentSize)) {\n//     args.indentSize = args.indentSize[0];\n//     this.tabSize = args.indentSize;\n//     this.backup = args.backup;\n//   }\n//\n//   if (args.this.tab) {\n//     this.tabSize = 1;\n//     this.tabStr = '\\t';\n//   }\n//\n//   for (let pth of args.files) {\n//     try {\n//       this.beautifyFile(pth);\n//     } catch (err) {\n//       errors.push(err);\n//     }\n//   }\n//\n//   console.log('Process finished!');\n//\n//   if (errors.length) {\n//     console.log(`Errors:\\n`, ...errors);\n//   }\n// }\n\n// beautifyFile(path) {\n//   let error = false;\n//\n//   if (path == '-') {\n//     logr('Path is dash');\n//\n//     let data = process.stdin.read();\n//\n//     let result,\n//       error = this.beautifyString(data, '(stdin)');\n//     process.stdout.write(result);\n//   } else {\n//     // named file\n//     logr('Path is not dash');\n//\n//     let data = this.readFile(path);\n//     let result,\n//       error = this.beautifyString(data, path);\n//\n//     logr(result);\n//\n//     if (data != result) {\n//       logr('data != result');\n//\n//       if (this.backup) {\n//         logr('this.backup');\n//         logr(path);\n//\n//         this.writeFile(path + '.bak', data);\n//       }\n//\n//       this.writeFile(path, result);\n//     }\n//   }\n//\n//   return error;\n// }\n","export const settings = {\n  formatOnSave: {\n    title: 'Format Files on Save',\n    description: 'Automatically format entire file when saving.',\n    type: 'boolean',\n    default: false,\n    order: 1\n  },\n  indentSize: {\n    title: 'Indent Size',\n    description: 'Number of spaces used to represent an indentation.',\n    type: 'number',\n    default: 2,\n    order: 2\n  },\n  indentType: {\n    title: 'Indent Type',\n    description: 'Determine chracter used for indentation.',\n    type: 'string',\n    enum: ['tab', 'space'],\n    default: 'tab',\n    order: 3\n  },\n  backup: {\n    title: 'Backup',\n    description:\n      'Beautysh will create a backup file in the same path as the original.',\n    type: 'boolean',\n    default: false,\n    order: 4\n  }\n};\n","import { CompositeDisposable, TextEditor } from 'atom';\n\nimport { format } from './beautifier';\n\nconst subscriptions = new CompositeDisposable();\n\nfunction formatEditorText(editor?: TextEditor) {\n  editor = editor || atom.workspace.getActiveTextEditor();\n\n  if (!editor) return;\n\n  editor.setText(format(editor.getText()));\n}\n\nfunction onNewEditor(editor: TextEditor) {\n  subscriptions.add(\n    editor.getBuffer().onWillSave(() => formatEditorText(editor))\n  );\n}\n\nexport { settings as config } from './settings';\n\nexport function activate() {\n  subscriptions.add(\n    atom.commands.add('atom-workspace', 'shell-script-beautifier:format', () =>\n      formatEditorText()\n    ),\n    atom.workspace.observeTextEditors(onNewEditor)\n  );\n}\n\nexport function deactivate() {\n  subscriptions.dispose();\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}